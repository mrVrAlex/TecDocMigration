<?php

namespace OpsWay\TecDocMigration\Reader\TecDocDb;

class ProductCarsReader extends TecdocDbAbstract
{
    const SQL_STMT =<<<'SQL'
SELECT
		CONCAT('CAR_',TYPES.TYP_ID) as `code`,
		'IS_CAR' as family,
		(SELECT DES_TEXTS1.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS1

			JOIN COUNTRY_DESIGNATIONS AS COUNTRY_DESIGNATIONS1 ON (DES_TEXTS1.TEX_ID = COUNTRY_DESIGNATIONS1.CDS_TEX_ID)
			WHERE (COUNTRY_DESIGNATIONS1.CDS_ID = TYPES.TYP_MMT_CDS_ID) AND (COUNTRY_DESIGNATIONS1.CDS_LNG_ID=4)
			AND (SUBSTRING(COUNTRY_DESIGNATIONS1.CDS_CTM, 250+2, 1)='1') LIMIT 1
			) AS name,
CONCAT('model_',MODELS.MOD_ID,',','brand_',MODELS.MOD_MFA_ID) as categories,
		TYPES.TYP_PCON_START,
		TYPES.TYP_PCON_END,
		CASE
			WHEN (SELECT DES_TEXTS2.TEX_TEXT
					FROM DES_TEXTS AS DES_TEXTS2
					JOIN DESIGNATIONS AS DESIGNATIONS2 ON (DES_TEXTS2.TEX_ID = DESIGNATIONS2.DES_TEX_ID)
					WHERE (DESIGNATIONS2.DES_ID = TYPES.TYP_KV_BODY_DES_ID) AND (DESIGNATIONS2.DES_LNG_ID=4)) IS NULL
			THEN (SELECT DES_TEXTS3.TEX_TEXT
					FROM DES_TEXTS AS DES_TEXTS3
					JOIN DESIGNATIONS AS DESIGNATIONS3 ON (DES_TEXTS3.TEX_ID = DESIGNATIONS3.DES_TEX_ID)
					WHERE (DESIGNATIONS3.DES_ID = TYPES.TYP_KV_MODEL_DES_ID) AND (DESIGNATIONS3.DES_LNG_ID=4))
			ELSE (SELECT DES_TEXTS4.TEX_TEXT
					FROM DES_TEXTS AS DES_TEXTS4
					JOIN DESIGNATIONS AS DESIGNATIONS4 ON (DES_TEXTS4.TEX_ID = DESIGNATIONS4.DES_TEX_ID)
					WHERE (DESIGNATIONS4.DES_ID = TYPES.TYP_KV_BODY_DES_ID) AND (DESIGNATIONS4.DES_LNG_ID=4))
		END AS BODYTYPE,
		TYPES.TYP_KW_FROM,
		TYPES.TYP_KW_UPTO,  		TYPES.TYP_HP_FROM,
		TYPES.TYP_HP_UPTO,  		TYPES.TYP_CCM,
		TYPES.TYP_CYLINDERS,
		TYPES.TYP_DOORS,  		TYPES.TYP_TANK,  		(SELECT DES_TEXTS5.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS5
			JOIN DESIGNATIONS AS DESIGNATIONS5 ON (DES_TEXTS5.TEX_ID = DESIGNATIONS5.DES_TEX_ID)
			WHERE (DESIGNATIONS5.DES_ID = TYPES.TYP_KV_VOLTAGE_DES_ID) AND (DESIGNATIONS5.DES_LNG_ID=4) LIMIT 1
			) AS TYP_KV_VOLTAGE,   		(SELECT DES_TEXTS6.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS6
			JOIN DESIGNATIONS AS DESIGNATIONS6 ON (DES_TEXTS6.TEX_ID = DESIGNATIONS6.DES_TEX_ID)
			WHERE (DESIGNATIONS6.DES_ID = TYPES.TYP_KV_ABS_DES_ID) AND (DESIGNATIONS6.DES_LNG_ID=4) LIMIT 1
			) AS TYPEABS,
		(SELECT DES_TEXTS7.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS7
			JOIN DESIGNATIONS AS DESIGNATIONS7 ON (DES_TEXTS7.TEX_ID = DESIGNATIONS7.DES_TEX_ID)
			WHERE (DESIGNATIONS7.DES_ID = TYPES.TYP_KV_ASR_DES_ID) AND (DESIGNATIONS7.DES_LNG_ID=4) LIMIT 1
			) AS TYPEASR,
		(SELECT DES_TEXTS8.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS8
			JOIN DESIGNATIONS AS DESIGNATIONS8 ON (DES_TEXTS8.TEX_ID = DESIGNATIONS8.DES_TEX_ID)
			WHERE (DESIGNATIONS8.DES_ID = TYPES.TYP_KV_ENGINE_DES_ID) AND (DESIGNATIONS8.DES_LNG_ID=4) LIMIT 1
			) AS TYPEENGINE,
		(SELECT
			GROUP_CONCAT(ENGINES.ENG_CODE)
			FROM
				ENGINES
				JOIN LINK_TYP_ENG ON (ENGINES.ENG_ID=LINK_TYP_ENG.LTE_ENG_ID)
			WHERE
				(LINK_TYP_ENG.LTE_TYP_ID=TYPES.TYP_ID)
				AND (SUBSTRING(ENG_CTM, 250+2, 1)='1')
				AND (SUBSTRING(LTE_CTM, 250+2, 1)='1') LIMIT 1
				) as LISTCODEENGINE,
		(SELECT DES_TEXTS9.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS9
			JOIN DESIGNATIONS AS DESIGNATIONS9 ON (DES_TEXTS9.TEX_ID = DESIGNATIONS9.DES_TEX_ID)
			WHERE (DESIGNATIONS9.DES_ID = TYPES.TYP_KV_BRAKE_TYPE_DES_ID) AND (DESIGNATIONS9.DES_LNG_ID=4) LIMIT 1
			) AS BRAKETYPE,
		(SELECT DES_TEXTS10.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS10
			JOIN DESIGNATIONS AS DESIGNATIONS10 ON (DES_TEXTS10.TEX_ID = DESIGNATIONS10.DES_TEX_ID)
			WHERE (DESIGNATIONS10.DES_ID = TYPES.TYP_KV_BRAKE_SYST_DES_ID) AND (DESIGNATIONS10.DES_LNG_ID=4)
			) AS BRAKESYSTEM,
		(SELECT DES_TEXTS11.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS11
			JOIN DESIGNATIONS AS DESIGNATIONS11 ON (DES_TEXTS11.TEX_ID = DESIGNATIONS11.DES_TEX_ID)
			WHERE (DESIGNATIONS11.DES_ID = TYPES.TYP_KV_FUEL_DES_ID) AND (DESIGNATIONS11.DES_LNG_ID=4) LIMIT 1
			) AS TYPEFUEL,
		(SELECT DES_TEXTS12.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS12
			JOIN DESIGNATIONS AS DESIGNATIONS12 ON (DES_TEXTS12.TEX_ID = DESIGNATIONS12.DES_TEX_ID)
			WHERE (DESIGNATIONS12.DES_ID = TYPES.TYP_KV_CATALYST_DES_ID) AND (DESIGNATIONS12.DES_LNG_ID=4) LIMIT 1
			) AS TYPECATALYST,
		TYPES.TYP_MAX_WEIGHT,  		(SELECT DES_TEXTS13.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS13
			JOIN DESIGNATIONS AS DESIGNATIONS13 ON (DES_TEXTS13.TEX_ID = DESIGNATIONS13.DES_TEX_ID)
			WHERE (DESIGNATIONS13.DES_ID = TYPES.TYP_KV_AXLE_DES_ID) AND (DESIGNATIONS13.DES_LNG_ID=4) LIMIT 1
			) AS TYPEAXLE,  		TYPES.TYP_CCM_TAX,
		TYPES.TYP_LITRES,
		TYPES.TYP_VALVES,

		(SELECT DES_TEXTS15.TEX_TEXT
			FROM DES_TEXTS AS DES_TEXTS15
			JOIN DESIGNATIONS AS DESIGNATIONS15 ON (DES_TEXTS15.TEX_ID = DESIGNATIONS15.DES_TEX_ID)
			WHERE (DESIGNATIONS15.DES_ID = TYPES.TYP_KV_TRANS_DES_ID) AND (DESIGNATIONS15.DES_LNG_ID=4) limit 1
			) AS TYPETRANS

	FROM TYPES
INNER JOIN MODELS ON (TYPES.TYP_MOD_ID=MODELS.MOD_ID)
WHERE (SUBSTRING(TYPES.TYP_CTM, 250+2, 1) = '1')
SQL;

    /** @var array */
    protected $fieldNames = [];

    public function read()
    {
        if (!$this->isReadyFetch($this->stmt)){
            $this->stmt = $this->prepareQuery(self::SQL_STMT);
        }
        $data = $this->stmt->fetch();
        if (!$data) return null;

        foreach (AttributeOptionCarsReader::$attributes as $attr)
        {
            if ($data[$attr['attribute']]) {
                $data[$attr['attribute']] = $this->normalizeCode($data[$attr['attribute']]);
            }
        }

        unset($data['description']);
        return $data;
    }

    protected function normalizeCode($label)
    {
        return strtolower(preg_replace('/_+/','_',str_replace([' ','/','(',')','-',',','.'],'_',$label)));
    }
}
